extend ../../includes/layout

block content
	.container

		h2 CLIENT5: Inspirational Quotes

		if typeof(due) != 'undefined'
			h3 Due
			p= due

		h3 Skills
		ul
			li Modifying the DOM
			li Sorting
			li Data Validation
			li CSS Architecture
			li Local Storage

		h3 Resources
		ul
			li: a(href='http://api.jquery.com', target='_blank') jQuery Documentation
			li: a(href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort', target='_blank') Array.prototype.sort

		h3 Background
		p.
			In this exercise you will be writing your first comprehensive web 
			application. You know how to manipulate the DOM with jQuery and 
			you know how to respond to user events such as button clicks or
			key presses. With this you can create an interactive application.

		p.
			This application is entirely client-side. That is, you are not
			saving or retrieving data from the server, so it is isolated to your
			machine and the quotes you add will not be saved if you refresh your
			page. You can simulate a database by utilizing LocalStorage, which is
			the task presented in Bonus I.

		p.
			The requirements for this exercise are purposefully <b>underspecified</b>.
			This is the expected real-world scenario you have as a developer. Program
			specifications are often written by a product owner without developer
			knowledge. This is a good thing. This is where you shine, in <b>turning 
			people's ideas into reality</b>, whether they are your own ideas or someone else's.

		p.
			Take a few moments to design each feature before writing any code and
			don't hesitate to run it by your classmates or
			the instructors first before writing code.

		h3 Requirements
		ol
			li.
				Build a client-side web app that allow users to share
				inspirational quotes. You choose whether the app is broken up
				into multiple pages or exposes functionality through multiple
				components on a single page.
			li A user can add a new quote through a form. The form should ask
				| for the quote and author, which are both required.
			li Display a list of all the quotes. This list should update in 
				| real-time when quotes are added, deleted, or rated.
			li User can click on the author of a quote to go to
				| a separate page/sceeen that shows all quotes from that person.
			li Users can rate a quote 1-5 stars.
			li Quotes should be sorted by rating. 
			li Make a 'Random Quote' button that selects a quote at random and
				| displays it in a popup (not an alert).
			li User can delete a quote. The user should be given the option
				| to undo their last action.

		p.alert.alert-info.
			<b>Tip</b>: How can you speed up debugging? If you are manually
			adding quotes every time you have to test a feature, maybe there
			is a way to prepopulate the quotes for testing purposes?

		h4 Bonus I: Local Storage
		p.
			Simulate a persistant database by saving users quotes to LocalStorage
			and retrieving them on page load.

		h4 Bonus II: Client-Side Templating
		p.
			Generating HTML dynamically can be a messy affair: concatenating
			strings of angled brackets somewhere in the middle of your jQuery
			code. Yuk! Improve the ease, readability, and maintainability of 
			your code by leveraging one of the following client-side templating 
			languages:
		ul
			li: a(href='http://metaraine.github.io/creatable/', target='_blank') Creatable
			li: a(href='http://handlebarsjs.com/', target='_blank') Handlebars

		include ../../includes/exercise-comments.jade